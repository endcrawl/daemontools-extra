#!/usr/bin/env python
'''
Like unixserver(1), but just listen and exec the subordinate program
with the listening socket as stdin. The subordinate program still needs
to call accept(2) on stdin.
'''

import sys
import os
import os.path
import socket
import errno

prog = sys.argv.pop(0)
mode = 0770

while len(sys.argv):
  arg0 = sys.argv[0]
  if arg0 == '-m':
    sys.argv.pop(0)
    mode = int(sys.argv.pop(0),8)
  elif arg0 == '--':
    sys.argv.pop(0)
    break
  else:
    break

path = os.path.realpath(sys.argv.pop(0))

# Remove socket from previous run, if it exists.
try:
  os.unlink(path)
except OSError, e:
  if e.errno != errno.ENOENT:
    raise

s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
s.bind(path)
os.chmod(path, mode)
s.listen(32)
os.dup2(s.fileno(),0)
os.close(s.fileno())
os.execvp(sys.argv[0],sys.argv)

